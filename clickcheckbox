from selenium import webdriver
from selenium.webdriver.chrome.service import Service as ChromeService
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from time import sleep

def iniciar_driver():
    chrome_options = Options()
    arguments = ['--lang=pt-BR', '--window-size=800,1000', '--incognito']
    for argument in arguments:
        chrome_options.add_argument(argument)

    chrome_options.add_experimental_option('prefs', {
        'download.prompt_for_download': False,
        'profile.default_content_setting_values.notifications': 2,
        'profile.default_content_setting_values.automatic_downloads': 1,
    })
    
    driver = webdriver.Chrome(service=ChromeService(
        ChromeDriverManager().install()), options=chrome_options)

    return driver

driver = iniciar_driver()

# Navegar até o site
driver.get('https://cursoautomacao.netlify.app')

# Aguardar até que os checkboxes estejam visíveis e clicáveis
WebDriverWait(driver, 10).until(
    EC.visibility_of_all_elements_located((By.XPATH, "//input[@type='checkbox']"))
)

checkboxes = driver.find_elements(By.XPATH, "//input[@type='checkbox']")

# Usar uma abordagem mais segura para clicar
for checkbox in [checkboxes[0], checkboxes[2]]:
    driver.execute_script("arguments[0].scrollIntoView(true);", checkbox)
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable(checkbox)).click()

# Manter o navegador aberto para inspeção
input("Pressione Enter para fechar o navegador...")

# Fechar o navegador
driver.quit()
